$YLEnableGridSystem: true !default;

$YLGridSystemWidth: auto !default;
$YLGridSystemColumnCount: 12 !default;

$YLGridSystemGutterWidth: 0 !default;
$YLGridSystemColumnWidth: 0;


@if $YLGridSystemWidth == auto {
    @if $YLGridSystemGutterWidth != 0 {
        @warn Gutter Width will be ignorled in fluid mode;
        $YLGridSystemGutterWidth: 0;
    }
    $YLGridSystemColumnWidth: 100% / $YLGridSystemColNumber;
}
@else {
    $YLGridSystemColumnWidth: $YLGridSystemWidth / $YLGridSystemColNumber;
}

@if $YLDebugMode {
    @debug "Grid system column width = #{$YLGridSystemColumnWidth}";
    @debug "Grid system full width = #{$YLGridSystemWidth}";
}

@if $YLEnableGridSystem {
    
    // Set the container width, and override it for fixed navbars in media queries
    .container {
        @include clearfix();
    
        margin-left: auto;
        margin-right: auto;
    
        @if $YLGridSystemWidth != auto {
            width: $YLGridSystemWidth;
        }
    }

    .row {
        @include clearfix();
    }

    %YLGrideSystemColumnLayout {
        position: relative;
        box-sizing: border-box;
        float: left;
    
        // Prevent columns from collapsing when empty
        min-height: 1px;
        // Inner gutter via padding
        padding-left:  ($YLGridSystemGutterWidth / 2);
        padding-right: ($YLGridSystemGutterWidth / 2);
    }

    @for $i from 1 to $YLGridSystemColumnCount+1 {
        .col-#{$i} {
            @extend %YLGrideSystemColumnLayout;
        }
    }

    @for $i from 1 to $YLGridSystemColumnCount+1 {
        .col-#{$i} {
            width: $YLGridSystemColumnWidth * $i;
        }
    }

    @for $i from 1 to $YLGridSystemColumnCount {
        // Push and pull columns
        .col-push-#{$i} {
            left: $YLGridSystemColumnWidth * $i;
        }
    
        .col-pull-#{$i} {
            right: $YLGridSystemColumnWidth * $i;
        }
    
        // Offsets
        .col-offset-#{$i} {
            margin-left: $YLGridSystemColumnWidth * $i;
        }
    }
}

